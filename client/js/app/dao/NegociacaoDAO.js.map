{"version":3,"sources":["../../app-es6/dao/NegociacaoDAO.js"],"names":["NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","e","target","error","name","negociacoes","cursor","openCursor","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAaA,a;AAGT,uCAAYC,UAAZ,EACA;AAAA;;AACK,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACJ;;;;wCAEGC,U,EACJ;AAAA;;AACK,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AAChC,gCAAIC,UAAU,MAAKN,WAAL,CACCO,WADD,CACa,CAAC,MAAKN,MAAN,CADb,EAC2B,WAD3B,EAECO,WAFD,CAEa,MAAKP,MAFlB,EAGCQ,GAHD,CAGKP,UAHL,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,SAAL;AAAA,6BAApB;AACAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBN,uCAAOO,EAAEC,MAAF,CAASC,KAAT,CAAeC,IAAtB;AACH,6BAFD;AAGJ,yBAVM,CAAP;AAWJ;;;8CAGD;AAAA;;AACI,+BAAO,IAAIZ,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;;AAE9B,gCAAIW,cAAc,EAAlB;;AAEA,gCAAIC,SAAS,OAAKjB,WAAL,CACEO,WADF,CACc,CAAC,OAAKN,MAAN,CADd,EAC4B,WAD5B,EAEEO,WAFF,CAEc,OAAKP,MAFnB,EAGEiB,UAHF,EAAb;;AAKDD,mCAAOP,SAAP,GAAmB,aAAI;;AAEnB,oCAAIS,QAAQP,EAAEC,MAAF,CAASO,MAArB;;AAEA,oCAAGD,KAAH,EACA;AACI,wCAAIE,OAAOF,MAAMG,KAAjB;AACAN,gDAAYO,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA0BJ,KAAKK,WAA/B,EAA2CL,KAAKM,MAAhD,CAAjB;AACAR,0CAAMS,QAAN;AACH,iCALD,MAOA;AACExB,4CAAQY,WAAR;AACD;AACJ,6BAdD;;AAgBAC,mCAAON,OAAP,GAAiB;AAAA,uCAAKN,OAAO,0CAAP,CAAL;AAAA,6BAAjB;AACL,yBA1BM,CAAP;AA2BH;;;4CAGD;AAAA;;AACI,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjC,gCAAIY,SAAW,OAAKjB,WAAL,CACKO,WADL,CACiB,CAAC,OAAKN,MAAN,CADjB,EAC+B,WAD/B,EAEKO,WAFL,CAEiB,OAAKP,MAFtB,EAGI4B,KAHJ,EAAf;;AAKAZ,mCAAOP,SAAP,GAAmB;AAAA,uCAAKN,QAAQ,kCAAR,CAAL;AAAA,6BAAnB;;AAEAa,mCAAON,OAAP,GAAiB;AAAA,uCAAIN,OAAO,0CAAP,CAAJ;AAAA,6BAAjB;AACH,yBATM,CAAP;AAUH","file":"NegociacaoDAO.js","sourcesContent":["export class NegociacaoDAO\r\n{\r\n\r\n    constructor(connection)\r\n    {\r\n         this._connection = connection;\r\n         this._store = 'negociacoes';\r\n    }\r\n\r\n    add(negociacao)\r\n    {\r\n         return new Promise((resolve,reject)=>{\r\n              let request = this._connection\r\n                            .transaction([this._store],'readwrite')\r\n                            .objectStore(this._store)\r\n                            .add(negociacao);\r\n\r\n              request.onsuccess = e => resolve();\r\n              request.onerror = e => {\r\n                  reject(e.target.error.name)\r\n              };\r\n         });\r\n    }\r\n\r\n    listAll()\r\n    {\r\n        return new Promise((resolve,reject)=>{\r\n\r\n               let negociacoes = [];\r\n\r\n               let cursor = this._connection\r\n                             .transaction([this._store],'readwrite')\r\n                             .objectStore(this._store)\r\n                             .openCursor();\r\n\r\n              cursor.onsuccess = e =>{\r\n\r\n                  let atual = e.target.result;\r\n\r\n                  if(atual)\r\n                  {\r\n                      let dado = atual.value;\r\n                      negociacoes.push(new Negociacao(dado._data,dado._quantidade,dado._valor));\r\n                      atual.continue();\r\n                  }\r\n                  else\r\n                  {\r\n                    resolve(negociacoes);\r\n                  }\r\n              }\r\n\r\n              cursor.onerror = e => reject('Não foi possivel carregar as negociacões');\r\n        });\r\n    }\r\n\r\n    clear()\r\n    {\r\n        return new Promise((resolve,reject)=>{\r\n            let cursor =   this._connection\r\n                               .transaction([this._store],'readwrite')\r\n                               .objectStore(this._store)\r\n                              .clear();\r\n\r\n            cursor.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n\r\n            cursor.onerror = e=> reject('Ocorreu um erro ao apagar as negociações');\r\n        });\r\n    }\r\n}\r\n"]}